@using System.Text.Json
@{
    ViewData["Title"] = "Home Page";

}
@model DashboardVM;

<div class="d-flex">



    <!-- Main Content -->
    <div class="flex-grow-1">


        <!-- Dashboard Content -->
        <div class="container py-4">
            <h2 class="mb-4">Dashboard</h2>

            <!-- Summary Cards -->
            <div class="row mb-4">
                <div class="col-md-4 mb-3">
                    <div class="card shadow text-center">
                        <div class="card-body row">
                            <div class="col-1">
                                <i class="bi bi-currency-dollar fs-3 text-success"></i>
                            </div>
                            <div class="col-11">
                                <h6>Total Income</h6>
                                <h4>@Model.TotalIncome</h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card shadow text-center">
                        <div class="card-body row">
                            <div class="col-1">
                                <i class="bi bi-wallet2 fs-3 text-success"></i>
                            </div>
                            <div class="col-11">
                                <h6>Total Expense</h6>
                                <h4>@Model.TotalExpense</h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card shadow text-center">
                        <div class="card-body row">
                            <div class="col-1">
                                <i class="bi bi-folder-fill fs-3 text-primary"></i>
                            </div>
                            <div class="col-11">
                                <h6>Categories Used</h6>
                                <h4>@Model.CategoriesCount</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-4 mb-3">
                    <div class="card shadow text-center">
                        <div class="card-body row">
                            <div class="col-1">
                                <i class="bi bi-arrow-left-right fs-3 text-warning"></i>
                            </div>
                            <div class="col-11">
                                <h6>Total Transactions</h6>
                                <h4>@Model.TransactionCount</h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card shadow text-center">
                        <div class="card-body row">
                            <div class="col-2">
                                <i class="bi bi-bar-chart-fill fs-3 text-info"></i>
                            </div>
                            <div class="col-8">
                                <h6>Top Expense Category</h6>
                                <h4>
                                    @(!string.IsNullOrEmpty(Model.TopExpenseCategoryName)
                                            ? $"{Model.TopExpenseCategoryName} - {Model.TopExpenseCategoryAmount:C}"
                                            : "N/A")
                                </h4>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card shadow text-center">
                        <div class="card-body row">
                            <div class="col-1">
                                <i class="bi bi-calendar-month fs-3 text-secondary"></i>
                            </div>
                            <div class="col-11">
                                <h6>Monthly Expense</h6>
                                <h4>@Model.MonthlyExpense</h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Pie Chart -->
            <div class="row">
                <!-- Income vs Expense Bar Chart -->
                <div class="col-md-6 mb-4">
                    <div class="card shadow">
                        <div class="card-body">
                            <h5 class="card-title">Income vs Expense</h5>
                            <canvas id="incomeExpenseChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Expense by Category Doughnut Chart -->
                <div class="col-md-6 mb-4">
                    <div class="card shadow">
                        <div class="card-body">
                            <h5 class="card-title">Expenses by Category</h5>
                            <canvas id="expenseCategoryChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Monthly Expense Trend</h5>
                        <div style="height: 350px;">
                            <canvas id="monthlyExpenseChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>



            <!-- Recent Transactions Table -->
            <div class="card shadow">
                <div class="card-body">
                    <h5 class="card-title">Recent Transactions</h5>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Description</th>
                                <th>Amount</th>
                                <th>Category</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var item in Model.TransactionList)
                            {
                                <tr>
                                    <td>@item.CreatedAt.ToString("dd MMM")</td>
                                    <td>@item.Description</td>
                                    <td>@item.Amount</td>
                                    <td>@item.Category.Name</td>
                                </tr>
                            }
                            
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        const ctx1 = document.getElementById('incomeExpenseChart').getContext('2d');
        const incomeExpenseChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: ['Income', 'Expense'],
                datasets: [{
                    label: 'Amount ($)',
                    data:@Html.Raw(Json.Serialize(Model.IncomeExpenseData)),
                    backgroundColor: ['#198754', '#dc3545'],
                    borderRadius: 8,
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Expenses by Category Doughnut Chart
        const ctx2 = document.getElementById('expenseCategoryChart').getContext('2d');
        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.CategoriesLabels));
        const data = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.CategoriesAmount));
        const backgroundColors = data.map(() => {
            const hue = Math.floor(Math.random() * 360);
            return `hsl(${hue}, 70%, 70%)`;
        });
        const expenseCategoryChart = new Chart(ctx2, {
            type: 'doughnut',
            data: {
                labels: labels, // Dummy labels
                datasets: [{
                    label: 'Expenses',
                    data: data, // Dummy data
                   backgroundColor:backgroundColors,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
               const ctxTrend = document.getElementById('monthlyExpenseChart').getContext('2d');
               const data2=@Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthAmount));
        const monthlyExpenseChart = new Chart(ctxTrend, {
            type: 'line',
            data: {
                labels: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // Dummy months
                datasets: [{
                    label: 'Expenses ($)',
                    data: data2, // Dummy data
                    fill: true,
                    backgroundColor: 'rgba(220, 53, 69, 0.1)',
                    borderColor: '#dc3545',
                    borderWidth: 2,
                    tension: 0.3,
                    pointRadius: 4,
                    pointBackgroundColor: '#dc3545',
                    pointBorderColor: '#fff'
                }]
            },
            options: {
                responsive: true,

                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return `$${value}`;
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `$${context.parsed.y}`;
                            }
                        }
                    }
                }
            }
        });
    </script>
    }
